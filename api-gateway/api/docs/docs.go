// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/bookings/all/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of bookings with pagination",
                "tags": [
                    "bookings"
                ],
                "summary": "Lists bookings with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListBookingsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/payments/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves payment details by payment ID",
                "tags": [
                    "payments"
                ],
                "summary": "Retrieves a payment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payment ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/providers/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves provider details by provider ID",
                "tags": [
                    "providers"
                ],
                "summary": "Retrieves a provider by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid provider ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/reviews/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves review details by review ID",
                "tags": [
                    "reviews"
                ],
                "summary": "Retrieves a review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid review ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/services/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves service details by service ID",
                "tags": [
                    "services"
                ],
                "summary": "Retrieves a service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates user info by ID",
                "tags": [
                    "admin"
                ],
                "summary": "Updates user",
                "parameters": [
                    {
                        "description": "New user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves user info by ID",
                "tags": [
                    "admin"
                ],
                "summary": "Gets user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.GetProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes user info by ID",
                "tags": [
                    "admin"
                ],
                "summary": "Deletes user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid user id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves users from the database by filtering",
                "tags": [
                    "admin"
                ],
                "summary": "Fetches users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Full name",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of users per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponses"
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/bookings": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new booking and returns the booking details",
                "tags": [
                    "bookings"
                ],
                "summary": "Creates a new booking",
                "parameters": [
                    {
                        "description": "Booking details",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid booking data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/bookings/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of bookings with pagination",
                "tags": [
                    "bookings"
                ],
                "summary": "Lists bookings with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListBookingsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/bookings/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves booking details by booking ID",
                "tags": [
                    "bookings"
                ],
                "summary": "Retrieves a booking by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid booking ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates booking details by booking ID",
                "tags": [
                    "bookings"
                ],
                "summary": "Updates a booking by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated booking details",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.UpdateBookingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid booking data or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancels booking by booking ID",
                "tags": [
                    "bookings"
                ],
                "summary": "Cancels a booking by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid booking ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/payments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of payments with pagination",
                "tags": [
                    "payments"
                ],
                "summary": "Lists all payments with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListPaymentsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Processes a payment and returns the payment details",
                "tags": [
                    "payments"
                ],
                "summary": "Creates a new payment",
                "parameters": [
                    {
                        "description": "Payment details",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.CreatePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payment data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing payment",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/payments/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves payment details by payment ID",
                "tags": [
                    "payments"
                ],
                "summary": "Retrieves a payment by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payment ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves user profile by ID",
                "tags": [
                    "user"
                ],
                "summary": "Gets user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.GetProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates user info by ID",
                "tags": [
                    "user"
                ],
                "summary": "Updates user",
                "parameters": [
                    {
                        "description": "New user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UserResponseU"
                        }
                    },
                    "400": {
                        "description": "Invalid user id or data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/providers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of providers with pagination",
                "tags": [
                    "providers"
                ],
                "summary": "Lists all providers with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListProvidersResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/providers/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves provider details by provider ID",
                "tags": [
                    "providers"
                ],
                "summary": "Retrieves a provider by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid provider ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/reviews": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of reviews with pagination",
                "tags": [
                    "reviews"
                ],
                "summary": "Lists all reviews with pagination",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListReviewsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Submits a review for a booking and returns the review details",
                "tags": [
                    "reviews"
                ],
                "summary": "Creates a new review",
                "parameters": [
                    {
                        "description": "Review details",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid review data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing review",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/reviews/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves review details by review ID",
                "tags": [
                    "reviews"
                ],
                "summary": "Retrieves a review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid review ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the details of a review by its ID",
                "tags": [
                    "reviews"
                ],
                "summary": "Updates a review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review details",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ReviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid review data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing review",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a review by its ID",
                "tags": [
                    "reviews"
                ],
                "summary": "Deletes a review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid review ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/search/provider": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searchs Providers and returns details",
                "tags": [
                    "search"
                ],
                "summary": "Searchs Providers",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Sort by rating",
                        "name": "by_rating",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Sort by number of comments",
                        "name": "by_noc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Company Name",
                        "name": "company",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ishlash Vaqt oralig` + "`" + `i (8:00-20:00)",
                        "name": "availability",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListProvidersResponses"
                        }
                    },
                    "500": {
                        "description": "Server error while processing SearchProviders",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/search/service": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searchs service and returns details",
                "tags": [
                    "search"
                ],
                "summary": "Searchs Services",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Sort by price",
                        "name": "by_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Duration",
                        "name": "duration",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListServicesResponses"
                        }
                    },
                    "500": {
                        "description": "Server error while processing SearchServices",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of services with pagination",
                "tags": [
                    "services"
                ],
                "summary": "Lists all services with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListServicesResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/services/popular": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves service details",
                "tags": [
                    "services"
                ],
                "summary": "Retrieves a popular service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListServicesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/customer/services/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves service details by service ID",
                "tags": [
                    "services"
                ],
                "summary": "Retrieves a service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of providers with pagination",
                "tags": [
                    "providers"
                ],
                "summary": "Lists all providers with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListProvidersResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Registers a new provider and returns the provider details",
                "tags": [
                    "providers"
                ],
                "summary": "Registers a new provider",
                "parameters": [
                    {
                        "description": "Provider details",
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Provider"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid provider data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider/notifications": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new notification",
                "tags": [
                    "notification"
                ],
                "summary": "Creates notification",
                "parameters": [
                    {
                        "description": "Receiver ID, Title and Message",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.NewNotification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notification created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid data format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider/notifications/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets notification by ID",
                "tags": [
                    "notification"
                ],
                "summary": "Gets notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.Notification"
                        }
                    },
                    "400": {
                        "description": "Invalid data format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider/services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of services with pagination",
                "tags": [
                    "services"
                ],
                "summary": "Lists all services with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ListServicesResponse"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new service and returns the service details",
                "tags": [
                    "services"
                ],
                "summary": "Creates a new service",
                "parameters": [
                    {
                        "description": "Service details",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.CreateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider/services/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates service details by service ID",
                "tags": [
                    "services"
                ],
                "summary": "Updates a service by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service details",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.UpdateServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid service data or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/provider/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves provider details by provider ID",
                "tags": [
                    "providers"
                ],
                "summary": "Retrieves a provider by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid provider ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates provider details by provider ID",
                "tags": [
                    "providers"
                ],
                "summary": "Updates a provider by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated provider details",
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking.UpdateProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booking.ProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid provider data or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a provider by provider ID",
                "tags": [
                    "providers"
                ],
                "summary": "Deletes a provider by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid provider ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Provider not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error while processing request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "booking.BookingResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/booking.GeoPoint"
                },
                "provider_id": {
                    "type": "string"
                },
                "scheduled_time": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.CreatePaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "booking_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.CreateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration in minutes",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "booking.GeoPoint": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "booking.ListBookingsResponse": {
            "type": "object",
            "properties": {
                "bookings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.BookingResponse"
                    }
                }
            }
        },
        "booking.ListPaymentsResponse": {
            "type": "object",
            "properties": {
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.PaymentResponse"
                    }
                }
            }
        },
        "booking.ListProvidersResponse": {
            "type": "object",
            "properties": {
                "providers": {
                    "description": "List of providers",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.ProviderResponse"
                    }
                }
            }
        },
        "booking.ListProvidersResponses": {
            "type": "object",
            "properties": {
                "provideres": {
                    "description": "List of providers matching the filter criteria",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.Providers"
                    }
                }
            }
        },
        "booking.ListReviewsResponse": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.ReviewResponse"
                    }
                }
            }
        },
        "booking.ListServicesResponse": {
            "type": "object",
            "properties": {
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.ServiceResponse"
                    }
                }
            }
        },
        "booking.ListServicesResponses": {
            "type": "object",
            "properties": {
                "services": {
                    "description": "List of services matching the filter criteria",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booking.Service"
                    }
                }
            }
        },
        "booking.NewNotification": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.PaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "booking_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.ProviderResponse": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/booking.GeoPoint"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.Providers": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Availability time range (e.g., \"09:00-18:00\")",
                    "type": "string"
                },
                "averageRating": {
                    "description": "Average rating of the provider",
                    "type": "number"
                },
                "companyName": {
                    "description": "Company name of the provider",
                    "type": "string"
                },
                "id": {
                    "description": "Unique ID of the provider",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the provider",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the provider",
                    "type": "string"
                },
                "numberOfComments": {
                    "description": "Number of comments for the provider",
                    "type": "integer"
                }
            }
        },
        "booking.ReviewResponse": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "booking.Service": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "Duration of the service in minutes",
                    "type": "integer"
                },
                "id": {
                    "description": "Unique ID of the service",
                    "type": "string"
                },
                "location": {
                    "description": "Location of the service",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the service",
                    "type": "string"
                },
                "price": {
                    "description": "Price of the service",
                    "type": "number"
                }
            }
        },
        "booking.ServiceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "booking.UpdateBookingRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "booking.UpdateProviderRequest": {
            "type": "object",
            "properties": {
                "availability": {
                    "description": "Updated array of available time slots",
                    "type": "string"
                },
                "average_rating": {
                    "description": "Updated average rating",
                    "type": "number"
                },
                "company_name": {
                    "description": "Updated company name",
                    "type": "string"
                },
                "description": {
                    "description": "Updated description",
                    "type": "string"
                },
                "id": {
                    "description": "Provider ID",
                    "type": "string"
                },
                "location": {
                    "description": "Updated location",
                    "allOf": [
                        {
                            "$ref": "#/definitions/booking.GeoPoint"
                        }
                    ]
                },
                "services": {
                    "description": "Updated array of service IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "booking.UpdateServiceRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Booking": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/definitions/models.GeoPoint"
                },
                "provider_id": {
                    "type": "string"
                },
                "scheduled_time": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "models.GeoPoint": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "models.Provider": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "string"
                },
                "average_rating": {
                    "type": "number"
                },
                "company_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.GeoPoint"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "models.ReviewRequest": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "models.UUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "users.GetProfileResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "description": "Should be 'customer', 'provider', or 'admin'",
                    "type": "string"
                }
            }
        },
        "users.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "description": "Should be 'customer', 'provider', or 'admin'",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "users.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "role": {
                    "description": "Should be 'customer', 'provider', or 'admin'",
                    "type": "string"
                }
            }
        },
        "users.UserResponseU": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "users.UserResponses": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/users.UserResponse"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "On-Demand Car Wash Service",
	Description:      "API Gateway of On-Demand Car Wash Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
